{"remainingRequest":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/babel-loader/lib/index.js!/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/src/App.vue","mtime":1604998570000},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/cache-loader/dist/cjs.js","mtime":1610420035136},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/babel-loader/lib/index.js","mtime":1607423996145},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/cache-loader/dist/cjs.js","mtime":1610420035136},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/vue-loader/lib/index.js","mtime":1610420042252}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <header-nav></header-nav>\n    <transition name=\"fade\" mode=\"out-in\">\n      <router-view class=\"view\"></router-view>\n    </transition>\n    <el-dialog :title=\"callTypeDisplayName\" :visible.sync=\"isShowNewInvitationDialog\" width=\"400px\">\n      <span>{{this.getNewInvitationDialogContent()}}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"handleRejectCall\">拒绝</el-button>\n        <el-button type=\"primary\" @click=\"handleDebounce(handleAcceptCall, 500)\">接听</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { log } from \"./utils\";\nimport { getUsernameByUserid } from \"./service\";\nimport HeaderNav from \"./components/header-nav\";\nlet timeout;\n\nexport default {\n  name: \"App\",\n  components: {\n    HeaderNav\n  },\n  watch: {\n    isLogin: function(newIsLogin, oldIsLogin) {\n      if (newIsLogin !== oldIsLogin) {\n        if (newIsLogin) {\n          if (this.$router.history.current.path === \"/login\") {\n            // 防止已在 '/' 路由下再次 push\n            this.$router.push(\"/\");\n          }\n        } else {\n          this.$router.push(\"/login\");\n        }\n      }\n    }\n  },\n  computed: mapState({\n    isLogin: state => state.isLogin,\n    loginUserInfo: state => state.loginUserInfo,\n    callStatus: state => state.callStatus,\n    meetingUserIdList: state => state.meetingUserIdList,\n    muteVideoUserIdList: state => state.muteVideoUserIdList,\n    muteAudioUserIdList: state => state.muteAudioUserIdList\n  }),\n  async created() {\n    this.initListener();\n    await this.handleAutoLogin();\n  },\n  data() {\n    return {\n      isInviterCanceled: false,\n      isShowNewInvitationDialog: false,\n      inviterName: \"\",\n      callTypeDisplayName: \"\",\n      inviteData: {},\n      inviteID: \"\"\n    };\n  },\n  destroyed() {\n    this.removeListener();\n  },\n  methods: {\n    handleAutoLogin: async function() {},\n    initListener: function() {\n      this.$trtcCalling.on(this.TrtcCalling.EVENT.ERROR, this.handleError);\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.INVITED,\n        this.handleNewInvitationReceived\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.USER_ENTER,\n        this.handleUserEnter\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.USER_LEAVE,\n        this.handleUserLeave\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.REJECT,\n        this.handleInviteeReject\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.LINE_BUSY,\n        this.handleInviteeLineBusy\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.CALLING_CANCEL,\n        this.handleInviterCancel\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.KICKED_OUT,\n        this.handleKickedOut\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.CALLING_TIMEOUT,\n        this.handleCallTimeout\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.NO_RESP,\n        this.handleNoResponse\n      );\n      this.$trtcCalling.on(this.TrtcCalling.EVENT.CALL_END, this.handleCallEnd);\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.USER_VIDEO_AVAILABLE,\n        this.handleUserVideoChange\n      );\n      this.$trtcCalling.on(\n        this.TrtcCalling.EVENT.USER_AUDIO_AVAILABLE,\n        this.handleUserAudioChange\n      );\n    },\n    removeListener: function() {\n      this.$trtcCalling.off(this.TrtcCalling.EVENT.ERROR, this.handleError);\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.INVITED,\n        this.handleNewInvitationReceived\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.USER_ENTER,\n        this.handleUserEnter\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.USER_LEAVE,\n        this.handleUserLeave\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.REJECT,\n        this.handleInviteeReject\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.LINE_BUSY,\n        this.handleInviteeLineBusy\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.CALLING_CANCEL,\n        this.handleInviterCancel\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.KICKED_OUT,\n        this.handleKickedOut\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.CALLING_TIMEOUT,\n        this.handleCallTimeout\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.NO_RESP,\n        this.handleNoResponse\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.CALL_END,\n        this.handleCallEnd\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.USER_VIDEO_AVAILABLE,\n        this.handleUserVideoChange\n      );\n      this.$trtcCalling.off(\n        this.TrtcCalling.EVENT.USER_AUDIO_AVAILABLE,\n        this.handleUserAudioChange\n      );\n    },\n    handleError: function() {},\n    handleNewInvitationReceived: async function(payload) {\n      const { inviteID, sponsor, inviteData } = payload;\n      log(`handleNewInvitationReceived ${JSON.stringify(payload)}`);\n      if (inviteData.callEnd) {\n        // 最后一个人发送 invite 进行挂断\n        this.$store.commit(\"updateCallStatus\", \"idle\");\n        return;\n      }\n      if (sponsor === this.loginUserInfo.userId) {\n        // 邀请人是自己, 同一个账号有可能在多端登录\n        return;\n      }\n      // 这里需要考虑忙线的情况\n      if (this.callStatus === \"calling\" || this.callStatus === \"connected\") {\n        await this.$trtcCalling.reject({ inviteID, isBusy: true });\n        return;\n      }\n\n      const { callType } = inviteData;\n      this.inviteData = inviteData;\n      this.inviteID = inviteID;\n      this.isInviterCanceled = false;\n      this.$store.commit(\"updateIsInviter\", false);\n      this.$store.commit(\"updateCallStatus\", \"calling\");\n      const userName = sponsor;\n      this.inviterName = userName;\n      this.callTypeDisplayName =\n        callType === this.TrtcCalling.CALL_TYPE.AUDIO_CALL\n          ? \"语音通话\"\n          : \"视频通话\";\n      this.isShowNewInvitationDialog = true;\n    },\n    getNewInvitationDialogContent: function() {\n      return `来自${this.inviterName}的${this.callTypeDisplayName}`;\n    },\n    handleRejectCall: async function() {\n      try {\n        const { callType } = this.inviteData;\n        await this.$trtcCalling.reject({\n          inviteID: this.inviteID,\n          isBusy: false,\n          callType\n        });\n        this.dissolveMeetingIfNeed();\n      } catch (e) {\n        this.dissolveMeetingIfNeed();\n      }\n    },\n\n    handleDebounce: function(func, wait) {\n      let context = this;\n      let args = arguments;\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func.apply(context, args);\n      }, wait);\n    },\n\n    handleAcceptCall: async function() {\n      try {\n        const { callType, roomID } = this.inviteData;\n        this.$store.commit(\"userJoinMeeting\", this.loginUserInfo.userId);\n        await this.$trtcCalling.accept({\n          inviteID: this.inviteID,\n          roomID,\n          callType\n        });\n        this.isShowNewInvitationDialog = false;\n        if (\n          callType === this.TrtcCalling.CALL_TYPE.AUDIO_CALL &&\n          this.$router.history.current.fullPath !== \"/audio-call\"\n        ) {\n          this.$router.push(\"/audio-call\");\n        } else if (\n          callType === this.TrtcCalling.CALL_TYPE.VIDEO_CALL &&\n          this.$router.history.current.fullPath !== \"/video-call\"\n        ) {\n          this.$router.push(\"/video-call\");\n        }\n      } catch (e) {\n        this.dissolveMeetingIfNeed();\n      }\n    },\n    handleUserEnter: function({ userID }) {\n      // 建立连接\n      this.$store.commit(\"userJoinMeeting\", userID);\n      if (this.callStatus === \"calling\") {\n        // 如果是邀请者, 则建立连接\n        this.$nextTick(() => {\n          // 需要先等远程用户 id 的节点渲染到 dom 上\n          this.$store.commit(\"updateCallStatus\", \"connected\");\n        });\n      } else {\n        // 第n (n >= 3)个人被邀请入会, 并且他不是第 n 个人的邀请人\n        this.$nextTick(() => {\n          // 需要先等远程用户 id 的节点渲染到 dom 上\n          this.$trtcCalling.startRemoteView({\n            userID: userID,\n            videoViewDomID: `video-${userID}`\n          });\n        });\n      }\n    },\n    handleUserLeave: function({ userID }) {\n      if (this.meetingUserIdList.length == 2) {\n        this.$store.commit(\"updateCallStatus\", \"idle\");\n      }\n      this.$store.commit(\"userLeaveMeeting\", userID);\n    },\n    handleInviteeReject: async function({ userID }) {\n      const userName = await getUsernameByUserid(userID);\n      this.$message.warning(`${userName}拒绝通话`);\n      this.dissolveMeetingIfNeed();\n    },\n    handleInviteeLineBusy: async function({ userID }) {\n      const userName = await getUsernameByUserid(userID);\n      this.$message.warning(`${userName}忙线`);\n      this.dissolveMeetingIfNeed();\n    },\n    handleInviterCancel: function() {\n      // 邀请被取消\n      this.isShowNewInvitationDialog = false;\n      this.$message.warning(\"通话已取消\");\n      this.dissolveMeetingIfNeed();\n    },\n    handleKickedOut: function() {\n      //重复登陆，被踢出房间\n      this.$trtcCalling.logout();\n      this.$store.commit(\"userLogoutSuccess\");\n    },\n    // 作为被邀请方会收到，收到该回调说明本次通话超时未应答\n    handleCallTimeout: function() {\n      this.isShowNewInvitationDialog = false;\n      this.$message.warning(\"通话超时未应答\");\n      this.dissolveMeetingIfNeed();\n    },\n    handleCallEnd: function() {\n      this.$message.success(\"通话已结束\");\n      this.$trtcCalling.hangup();\n      this.dissolveMeetingIfNeed();\n      this.$router.push(\"/\");\n    },\n    handleNoResponse: async function({ userID }) {\n      const userName = await getUsernameByUserid(userID);\n      this.$message.warning(`${userName}无应答`);\n      this.dissolveMeetingIfNeed();\n    },\n    handleUserVideoChange: function({ userID, isVideoAvailable }) {\n      log(\n        `handleUserVideoChange userID, ${userID} isVideoAvailable ${isVideoAvailable}`\n      );\n      if (isVideoAvailable) {\n        const muteUserList = this.muteAudioUserIdList.filter(\n          currentID => currentID !== userID\n        );\n        this.$store.commit(\"updateMuteVideoUserIdList\", muteUserList);\n      } else {\n        const muteUserList = this.muteAudioUserIdList.concat(userID);\n        this.$store.commit(\"updateMuteVideoUserIdList\", muteUserList);\n      }\n    },\n    handleUserAudioChange: function({ userID, isAudioAvailable }) {\n      log(\n        `handleUserAudioChange userID, ${userID} isAudioAvailable ${isAudioAvailable}`\n      );\n      if (isAudioAvailable) {\n        const muteUserList = this.muteAudioUserIdList.filter(\n          currentID => currentID !== userID\n        );\n        this.$store.commit(\"updateMuteAudioUserIdList\", muteUserList);\n      } else {\n        const muteUserList = this.muteAudioUserIdList.concat(userID);\n        this.$store.commit(\"updateMuteAudioUserIdList\", muteUserList);\n      }\n    },\n    dissolveMeetingIfNeed() {\n      this.$store.commit(\"updateCallStatus\", \"idle\");\n      this.isShowNewInvitationDialog = false;\n      if (this.meetingUserIdList.length < 2) {\n        this.$store.commit(\"dissolveMeeting\");\n      }\n    }\n  }\n};\n</script>\n\n<style>\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0;\n  padding: 0;\n  background: aliceblue;\n  height: 100%;\n}\n@media screen and (max-width: 767px) {\n  .el-message {\n    min-width: 180px;\n  }\n}\n</style>\n"],"sourceRoot":"src"}]}