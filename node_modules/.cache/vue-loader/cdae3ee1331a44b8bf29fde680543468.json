{"remainingRequest":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/src/components/video-call/index.vue?vue&type=template&id=c5234dfa&scoped=true&","dependencies":[{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/src/components/video-call/index.vue","mtime":1604998570000},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/cache-loader/dist/cjs.js","mtime":1610420035136},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610420042252},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/cache-loader/dist/cjs.js","mtime":1610420035136},{"path":"/Users/xuzhitao/Desktop/Web/TRTCScenesDemo/trtc-calling-web/node_modules/vue-loader/lib/index.js","mtime":1610420042252}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAidmlkZW8tY2FsbC1zZWN0aW9uIiB9LAogICAgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInZpZGVvLWNhbGwtc2VjdGlvbi1oZWFkZXIiIH0sIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiV2VsY29tZSAiICsKICAgICAgICAgICAgX3ZtLl9zKAogICAgICAgICAgICAgIF92bS5sb2dpblVzZXJJbmZvICYmCiAgICAgICAgICAgICAgICAoX3ZtLmxvZ2luVXNlckluZm8ubmFtZSB8fCBfdm0ubG9naW5Vc2VySW5mby51c2VySWQpCiAgICAgICAgICAgICkKICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInZpZGVvLWNhbGwtc2VjdGlvbi10aXRsZSIgfSwgWwogICAgICAgIF92bS5fdigi6KeG6aKR6YCa6K+dIikKICAgICAgXSksCiAgICAgIF9jKCJzZWFyY2gtdXNlciIsIHsKICAgICAgICBvbjogewogICAgICAgICAgY2FsbFVzZXI6IF92bS5oYW5kbGVDYWxsVXNlciwKICAgICAgICAgIGNhbmNlbENhbGxVc2VyOiBfdm0uaGFuZGxlQ2FuY2VsQ2FsbFVzZXIKICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IGNsYXNzOiB7ICJ2aWRlby1jb25mZXJlbmNlIjogdHJ1ZSwgImlzLXNob3ciOiBfdm0uaXNTaG93VmlkZW9DYWxsIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInZpZGVvLWNvbmZlcmVuY2UtaGVhZGVyIiB9LCBbCiAgICAgICAgICAgIF92bS5fdigi6KeG6aKR6YCa6K+d5Yy65Z+fIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidmlkZW8tY29uZmVyZW5jZS1saXN0IiB9LAogICAgICAgICAgICBfdm0uX2woX3ZtLm1lZXRpbmdVc2VySWRMaXN0LCBmdW5jdGlvbih1c2VySWQpIHsKICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAga2V5OiAidmlkZW8tIiArIHVzZXJJZCwKICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAidXNlci12aWRlby1jb250YWluZXIiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICJpcy1tZSI6IHVzZXJJZCA9PT0gX3ZtLmxvZ2luVXNlckluZm8udXNlcklkCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidmlkZW8tIiArIHVzZXJJZCB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVzZXItc3RhdHVzIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ1c2VyLXZpZGVvLXN0YXR1cyI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICJpcy1tdXRlIjogX3ZtLmlzVXNlck11dGUoCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLm11dGVWaWRlb1VzZXJJZExpc3QsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInVzZXItYXVkaW8tc3RhdHVzIjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgImlzLW11dGUiOiBfdm0uaXNVc2VyTXV0ZSgKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ubXV0ZUF1ZGlvVXNlcklkTGlzdCwKICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInZpZGVvLWl0ZW0tdXNlcm5hbWUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS51c2VySWQyTmFtZVt1c2VySWRdIHx8IHVzZXJJZCkpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgMAogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInZpZGVvLWNvbmZlcmVuY2UtYWN0aW9uIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZWwtYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJhY3Rpb24tYnRuIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInN1Y2Nlc3MiIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0udG9nZ2xlVmlkZW8gfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5pc1ZpZGVvT24gPyAi5YWz6Zet5pGE5YOP5aS0IiA6ICLmiZPlvIDmkYTlg4/lpLQiKSldCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJlbC1idXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImFjdGlvbi1idG4iLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAic3VjY2VzcyIgfSwKICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS50b2dnbGVBdWRpbyB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLmlzQXVkaW9PbiA/ICLlhbPpl63puqblhYvpo44iIDogIuaJk+W8gOm6puWFi+mjjiIpKV0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImVsLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYWN0aW9uLWJ0biIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJkYW5nZXIiIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uaGFuZGxlSGFuZ3VwIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCLmjILmlq0iKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdCiAgICAgICkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}